name: SonarScan
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      #Compile lambda functions
      - name: Compile lambda
        run: |
          mvn --batch-mode install -f aws-lambda-layer-base/pom.xml
          mvn --batch-mode install -f wfdm-clamav-service/wfdm-clamav-scan-handler/pom.xml
          mvn --batch-mode install -f wfdm-file-index-initializer/pom.xml
          mvn --batch-mode install -f wfdm-file-index-service/pom.xml

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: staging
          key: ${{ runner.os }}-maven-${{ hashFiles('**war.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.java.binaries=/wfdm-file-index-service/target/classes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
